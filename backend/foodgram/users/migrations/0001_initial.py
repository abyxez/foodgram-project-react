# Generated by Django 4.2.4 on 2023-08-21 17:32

import api.validators
import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(help_text=('Обязательное к заполнению поле. ', 'Может быть от 5 до 30 символов.'), max_length=30, unique=True, validators=[api.validators.MinLenValidator(field='username', min_len=5)], verbose_name='Юзернейм')),
                ('first_name', models.CharField(help_text=('Обязательное к заполнению поле. ', 'Максимальная длина - 30 символов.'), max_length=30, unique=True, verbose_name='Полное имя')),
                ('last_name', models.CharField(help_text=('Обязательное к заполнению поле. ', 'Максимальная длина - 50 символов.'), max_length=50, verbose_name='Фамилия')),
                ('email', models.EmailField(help_text=('Обязательное к заполнению поле. ', 'Максимальная длина - 100 символов.'), max_length=100, unique=True, verbose_name='Адрес электронной почты')),
                ('password', models.CharField(help_text=('Обязательное к заполнению поле. ', 'Максимальная длина - 64 символа.'), max_length=64, verbose_name='Пароль')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
                'ordering': ('username',),
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Subscriptions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added', models.DateTimeField(auto_now_add=True, verbose_name='Дата добавления')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='following', to=settings.AUTH_USER_MODEL, verbose_name='Подписка на автора')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='followers', to=settings.AUTH_USER_MODEL, verbose_name='Подписчики')),
            ],
            options={
                'verbose_name': 'Подпискка',
                'verbose_name_plural': 'Подписки',
            },
        ),
        migrations.AddConstraint(
            model_name='subscriptions',
            constraint=models.CheckConstraint(check=models.Q(('author', models.F('user'))), name='\nНельзя подписаться на себя!\n'),
        ),
        migrations.AddConstraint(
            model_name='subscriptions',
            constraint=models.UniqueConstraint(fields=('author', 'user'), name='\nПовторно подписаться нельзя!\n'),
        ),
        migrations.AddConstraint(
            model_name='customuser',
            constraint=models.CheckConstraint(check=models.Q(('username__length__gte', 5)), name='\nЮзернейм слишком короткий.\n'),
        ),
    ]
